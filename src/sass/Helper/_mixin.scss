@mixin styleText($color, $fs, $fw) {
    color: $color;
    font-size: $fs;
    font-weight: $fw;

}

@mixin styleButton ($color, $bg-color, $bd, $fs, $fw, $pd-y, $pd-x){
    color: $color ;
    background: $bg-color;
    border: 1px solid $bd;
    font-size: $fs;
    font-weight: $fw;
    padding: $pd-y $pd-x;
    cursor: pointer;

}

@mixin hoverButton ($color-hover, $bg-hover, $bd-hover){
    color: $color-hover ;
    background: $bg-hover;
    border: 1px solid $bd-hover;
}

@mixin styleFormSearch ($bg-color, $bg-color-focus, $border-color, $color){
    .input-group{
        background-color: $bg-color;
        .form-control{
            background-color: transparent;
            border-color: transparent;
            box-shadow: none;
            transition: none;
            color: $color;
            &::placeholder{
                color: $color;
            }
            &:focus{
                background-color: $bg-color-focus;
                border-top-color: $border-color;
                border-left-color: $border-color;
                border-bottom-color: $border-color;   
            }
            &:focus + .input-group-prepend{
                .input-group-text{
                    background-color: $bg-color-focus;
                    border-top-color: $border-color;
                    border-right-color: $border-color;
                    border-bottom-color: $border-color;                         
                    color: $color-text-5-bg;
                    &:hover{
                        background-color: $color-text-5-bg;
                        color: $color-text-4;
                    }
                }
            }
        }
        .input-group-prepend{
            .input-group-text{
                background-color: transparent;
                border-color: transparent;
                color: $color-text-5-bg;

                &:hover{
                    background-color: $color-text-5-bg;
                    color: $color-text-4;
                }
            }
             
        }
    } 
}



@mixin responsive($screen) {
    @if map-has-key($map:$breakpoints, $key:$screen){
        $value: map-get($map:$breakpoints , $key:$screen);
        @media screen and (max-width:$value){
            @content;
        }
    }
    @else{
        @warn "`{$screen}` isn't exist in breakpoints";
    }
}


@mixin backgroundImg{
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
}

@mixin content{
    width: 90%;
    margin: 0 auto
}